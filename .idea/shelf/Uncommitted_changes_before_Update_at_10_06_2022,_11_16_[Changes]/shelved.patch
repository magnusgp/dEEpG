Index: pipeline/loadFunctions.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import os, mne, time, re\nfrom mne.io import read_raw_edf\nfrom collections import defaultdict\nfrom datetime import datetime, timezone\nimport pandas as pd\nimport numpy as np\nimport torch\nfrom preprocessFunctions import simplePreprocess, rereference, preprocessRaw\nimport matplotlib.pyplot as plt\nfrom scipy import signal, stats\n#from raw_utils import oneHotEncoder\nfrom tqdm import *\nfrom labelFunctions import label_TUH, annotate_TUH, solveLabelChannelRelation\nimport matplotlib.pyplot as plt\nimport multiprocessing\nfrom itertools import repeat\nimport pickle\n\n#plt.rcParams[\"font.family\"] = \"Times New Roman\"\n\n##These functions are either inspired from or modified copies of code written by David Nyrnberg:\n# https://github.com/DavidEnslevNyrnberg/DTU_DL_EEG/tree/0bfd1a9349f60f44e6f7df5aa6820434e44263a2/Transfer%20learning%20project\n\nclass Gaussian:\n    def plot(mean, std, name, lower_bound=None, upper_bound=None, resolution=None,\n             title=None, x_label=None, y_label=None, legend_label=None, legend_location=\"best\"):\n        lower_bound = (mean - 4 * std) if lower_bound is None else lower_bound\n        upper_bound = (mean + 4 * std) if upper_bound is None else upper_bound\n        resolution = 100\n\n        title = title or \"Gaussian Distribution\"\n        x_label = x_label or \"x\"\n        y_label = y_label or \"N(x|mu,std)\"\n        legend_label = legend_label or \"μ={}, σ={}, type={}\".format(mean, std, name)\n\n        X = np.linspace(lower_bound, upper_bound, resolution)\n        dist_X = Gaussian._distribution(X, mean, std)\n\n        plt.title(title)\n\n        plt.plot(X, dist_X, label=legend_label)\n\n        plt.xlabel(x_label)\n        plt.ylabel(y_label)\n        plt.legend(loc=legend_location)\n\n        return plt\n\n    def _distribution(X, mean, std):\n        return 1. / (np.sqrt(2 * np.pi) * std) * np.exp(-0.5 * (1. / std * (X - mean)) ** 2)\n\nclass TUH_data:\n    def __init__(self, path):\n        ### Makes dictionary of all edf files\n        EEG_count = 0\n        EEG_dict = {}\n        index_patient_df = pd.DataFrame(columns=['index', 'patient_id', 'window_count', 'elec_count'])\n        for dirpath, dirnames, filenames in os.walk(path):\n            for filename in [f for f in filenames if f.endswith(\".edf\")]:\n                \"\"\"For every edf file found somewhere in the directory, it is assumed the folders hold the structure: \n                \".../id/patientId/sessionId/edfFile\".\n                Therefore the path is split backwards and the EEG_dict updated with the found ids/paths.\n                Furthermore it is expected that a csv file will always be found in the directory.\"\"\"\n                session_path_split = os.path.split(dirpath)\n                patient_path_split = os.path.split(session_path_split[0])\n                id_path_split = os.path.split(patient_path_split[0])\n                EEG_dict.update({EEG_count: {\"id\": id_path_split[1],\n                                             \"patient_id\": patient_path_split[1],\n                                             \"session\": session_path_split[1],\n                                             \"path\": os.path.join(dirpath, filename),\n                                             \"csvpath\": os.path.join(dirpath, os.path.splitext(filename)[0]+'.csv')}})\n                new_index_patient = pd.DataFrame({'index': EEG_count,'patient_id': EEG_dict[EEG_count][\"patient_id\"], 'window_count' : 0, 'elec_count' : 0}, index = [EEG_count])\n                index_patient_df=pd.concat([index_patient_df, new_index_patient])\n                EEG_count += 1\n        self.index_patient_df = index_patient_df\n        self.EEG_dict = EEG_dict\n        self.EEG_count = EEG_count\n\n    def readRawEdf(self, edfDict=None, tWindow=120, tStep=30,\n                   read_raw_edf_param={'preload': True, \"stim_channel\": \"auto\"}):\n        try:\n            edfDict[\"rawData\"] = read_raw_edf(edfDict[\"path\"], **read_raw_edf_param)\n            edfDict[\"fS\"] = edfDict[\"rawData\"].info[\"sfreq\"]\n            t_start = edfDict[\"rawData\"].annotations.orig_time\n            if t_start.timestamp() <= 0:\n                edfDict[\"t0\"] = datetime.fromtimestamp(0, tz=timezone.utc)\n                t_last = edfDict[\"t0\"].timestamp() + edfDict[\"rawData\"]._last_time + 1 / edfDict[\"fS\"]\n                edfDict[\"tN\"] = datetime.fromtimestamp(t_last, tz=timezone.utc)\n            else:\n                t_last = t_start.timestamp() + edfDict[\"rawData\"]._last_time + 1 / edfDict[\"fS\"]\n                edfDict[\"t0\"] = t_start  # datetime.fromtimestamp(t_start.timestamp(), tz=timezone.utc)\n                edfDict[\"tN\"] = datetime.fromtimestamp(t_last, tz=timezone.utc)\n\n            edfDict[\"tWindow\"] = float(tWindow)  # width of EEG sample window, given in (sec)\n            edfDict[\"tStep\"] = float(tStep)  # step/overlap between EEG sample windows, given in (sec)\n\n        except:\n            print(\"error break please inspect:\\n %s\\n~~~~~~~~~~~~\" % edfDict[\"rawData\"].filenames[0])\n\n        return edfDict\n\n    def electrodeCLFPrep(self, tWindow=100, tStep=100 *.25,plot=False):\n        tic = time.time()\n        for k in tqdm(range(len(self.EEG_dict))):\n\n            annotations=solveLabelChannelRelation(self.EEG_dict[k]['csvpath'])\n\n            self.EEG_dict[k] = self.readRawEdf(self.EEG_dict[k], tWindow=tWindow, tStep=tStep,\n                                           read_raw_edf_param={'preload': True})\n\n            self.EEG_dict[k][\"rawData\"] = TUH_rename_ch(self.EEG_dict[k][\"rawData\"])\n            TUH_pick = ['Fp1', 'Fp2', 'F3', 'F4', 'C3', 'C4', 'P3', 'P4', 'O1', 'O2',\n                        'F7', 'F8', 'T3', 'T4', 'T5', 'T6', 'Cz']  # A1, A2 removed\n            self.EEG_dict[k][\"rawData\"].pick_channels(ch_names=TUH_pick)\n            self.EEG_dict[k][\"rawData\"].reorder_channels(TUH_pick)\n\n            if k == 0 and plot:\n                #Plot the energy voltage potential against frequency.\n                self.EEG_dict[k][\"rawData\"].plot_psd(tmax=np.inf, fmax=125, average=True)\n\n                \"\"\"\n                raw_anno = annotate_TUH(self.EEG_dict[k][\"rawData\"],df=annotations)\n                raw_anno.plot()\n                plt.title(\"Untouched raw signal\")\n                plt.show()\n                plt.savefig('Untouched_raw_signal.png')\n                \"\"\"\n            simplePreprocess(self.EEG_dict[k][\"rawData\"], cap_setup=\"standard_1005\", lpfq=1, hpfq=100, notchfq=60,\n                     downSam=250)\n\n            if k == 0:\n                self.sfreq = self.EEG_dict[k][\"rawData\"].info[\"sfreq\"]\n                self.ch_names = self.EEG_dict[k][\"rawData\"].info[\"ch_names\"]\n                if plot:\n                    self.EEG_dict[k][\"rawData\"].plot_psd(tmax=np.inf, fmax=125, average=True)\n\n                    \"\"\"\n                    raw_anno = annotate_TUH(self.EEG_dict[k][\"rawData\"], df=annotations)\n                    raw_anno.plot()\n                    plt.title(\"Raw signal after simple preprocessing\")\n                    plt.show()\n                    plt.savefig('Raw_signal_post_processing.png')\n                    \"\"\"\n\n            # Generate output windows for (X,y) as (array, label)\n            self.EEG_dict[k][\"labeled_windows\"], self.index_patient_df[\"window_count\"][k], self.index_patient_df[\"elec_count\"][k] = slidingRawWindow(self.EEG_dict[k],\n                                                                    t_max=self.EEG_dict[k][\"rawData\"].times[-1],\n                                                                    tStep=self.EEG_dict[k][\"tStep\"],\n                                                                    electrodeCLF=True,df=annotations)\n\n        toc = time.time()\n        print(\"\\n~~~~~~~~~~~~~~~~~~~~\\n\"\n              \"it took %imin:%is to run electrode classifier preprocess-pipeline for %i file(s)\\nwith window length [%.2fs] and t_step [%.2fs]\"\n              \"\\n~~~~~~~~~~~~~~~~~~~~\\n\" % (int((toc - tic) / 60), int((toc - tic) % 60), len(self.EEG_dict),\n                                            tWindow, tStep))\n        print(self.index_patient_df)\n\n        #Plot window and elec count\n\n        if plot:\n            x = self.index_patient_df['patient_id'].tolist()\n            y1 = self.index_patient_df['elec_count'].tolist()\n            y2 = self.index_patient_df['window_count'].tolist()\n            try:\n                y2_m = list()\n                for item1, item2 in zip(y2, y1):\n                    y2_m.append(item1 - item2)\n            except:\n                y2_m = [0]\n                print(\"Number of recorded counts for elec and windows dosen't match in dataframe\")\n\n            plt.bar(x, y1,0.6, color='r')\n            plt.bar(x, y2_m,0.6, bottom=y1, color='b')\n            fig1 = plt.gcf()\n            plt.show()\n            fig1.savefig(\"window_and_elec_count.png\")\n\n            #Gaussian distribution of elec and window count\n            plot = Gaussian.plot(np.mean(y1), np.std(y1), \"elec_count\")\n            plot = Gaussian.plot(np.mean(y2), np.std(y2), \"window_count\")\n            fig2 = plt.gcf()\n            plt.show()\n            fig2.savefig(\"Gaussian_window_and_elec_count.png\")\n\n            #Plot histogram of window and elec count\n            plt.bar(y2, y1, width = 2, align='center')  # A bar chart\n            fig3 = plt.gcf()\n            plt.xlabel('window_count')\n            plt.ylabel('elec_count')\n            plt.show()\n            fig3.savefig(\"Histogram_window_and_elec_count.png\")\n\n    def parallelElectrodeCLFPrep(self, tWindow=100, tStep=100 *.25,plot=False):\n        tic = time.time()\n        manager=multiprocessing.Manager()\n        queue=manager.Queue()\n        args = [(k, tWindow, tStep, plot, queue) for k in range(len(self.EEG_dict))]\n\n        with multiprocessing.get_context(\"spawn\").Pool() as pool:\n            pool.starmap(self.parallelPrep,args)\n\n        for k in range(len(self.EEG_dict)):\n            result=queue.get()\n            self.EEG_dict[k]=result[0]\n            self.index_patient_df[\"window_count\"][k] = result[1]\n            self.index_patient_df[\"elec_count\"][k] = result[2]\n\n        toc = time.time()\n        print(\"\\n~~~~~~~~~~~~~~~~~~~~\\n\"\n              \"it took %imin:%is to run electrode classifier preprocess-pipeline for %i file(s)\\nwith window length [%.2fs] and t_step [%.2fs]\"\n              \"\\n~~~~~~~~~~~~~~~~~~~~\\n\" % (int((toc - tic) / 60), int((toc - tic) % 60), len(self.EEG_dict),\n                                            tWindow, tStep))\n\n    def parallelElectrodeCLFPrep(self, tWindow=100, tStep=100 *.25):\n        tic = time.time()\n        manager=multiprocessing.Manager()\n        queue=manager.Queue()\n        args = [(k, tWindow, tStep, queue) for k in range(len(self.EEG_dict))]\n\n        with multiprocessing.get_context(\"spawn\").Pool() as pool:\n            pool.starmap(self.parallelPrep,args)\n\n        for k in range(len(self.EEG_dict)):\n            result=queue.get()\n            self.EEG_dict[k]=result[0]\n            self.index_patient_df[\"window_count\"][k] = result[1]\n            self.index_patient_df[\"elec_count\"][k] = result[2]\n\n        toc = time.time()\n        print(\"\\n~~~~~~~~~~~~~~~~~~~~\\n\"\n              \"it took %imin:%is to run electrode classifier preprocess-pipeline for %i file(s)\\nwith window length [%.2fs] and t_step [%.2fs]\"\n              \"\\n~~~~~~~~~~~~~~~~~~~~\\n\" % (int((toc - tic) / 60), int((toc - tic) % 60), len(self.EEG_dict),\n                                            tWindow, tStep))\n\n\n    def parallelPrep(self,k,tWindow=100, tStep=100 *.25,queue=None):\n        print(f\"Initializing prep of file {k}.\")\n        annotations = solveLabelChannelRelation(self.EEG_dict[k]['csvpath'])\n\n        self.EEG_dict[k] = self.readRawEdf(self.EEG_dict[k], tWindow=tWindow, tStep=tStep,\n                                           read_raw_edf_param={'preload': True})\n\n        self.EEG_dict[k][\"rawData\"] = TUH_rename_ch(self.EEG_dict[k][\"rawData\"])\n        TUH_pick = ['Fp1', 'Fp2', 'F3', 'F4', 'C3', 'C4', 'P3', 'P4', 'O1', 'O2',\n                    'F7', 'F8', 'T3', 'T4', 'T5', 'T6', 'Cz']  # A1, A2 removed\n        self.EEG_dict[k][\"rawData\"].pick_channels(ch_names=TUH_pick)\n        self.EEG_dict[k][\"rawData\"].reorder_channels(TUH_pick)\n\n        simplePreprocess(self.EEG_dict[k][\"rawData\"], cap_setup=\"standard_1005\", lpfq=1, hpfq=100, notchfq=60,\n                         downSam=250)\n\n        # Generate output windows for (X,y) as (array, label)\n        self.EEG_dict[k][\"labeled_windows\"], self.index_patient_df[\"window_count\"][k],\\\n        self.index_patient_df[\"elec_count\"][k] = slidingRawWindow(self.EEG_dict[k],\n                                                                  t_max=self.EEG_dict[k][\"rawData\"].times[-1],\n                                                                  tStep=self.EEG_dict[k][\"tStep\"],\n                                                                  electrodeCLF=True, df=annotations)\n\n        queue.put((self.EEG_dict[k],self.index_patient_df[\"window_count\"][k],self.index_patient_df[\"elec_count\"][k]))\n\n        print(f\"Finished prep of file {k}.\")\n\n    def parallelElectrodeCLFPrepVer2(self, tWindow=100, tStep=100 *.25):\n        tic = time.time()\n        manager=multiprocessing.Manager()\n        queue=manager.Queue()\n        args = [(k, tWindow, tStep, queue) for k in range(len(self.EEG_dict))]\n        with multiprocessing.Pool() as pool:\n            results=pool.starmap(self.parallelPrepVer2,args)\n\n        if len(results)==len(self.EEG_dict):\n            for k in range(len(results)):\n                self.EEG_dict[k] = results[k][0]\n                self.index_patient_df[\"window_count\"][k] = results[k][1]\n                self.index_patient_df[\"elec_count\"][k] = results[k][2]\n\n        else:\n            print(\"Something went wrong, results does not match EEG_dict length.\")\n\n        toc = time.time()\n        print(\"\\n~~~~~~~~~~~~~~~~~~~~\\n\"\n              \"it took %imin:%is to run electrode classifier preprocess-pipeline for %i file(s)\\nwith window length [%.2fs] and t_step [%.2fs]\"\n              \"\\n~~~~~~~~~~~~~~~~~~~~\\n\" % (int((toc - tic) / 60), int((toc - tic) % 60), len(self.EEG_dict),\n                                            tWindow, tStep))\n\n    def parallelPrepVer2(self,k,tWindow=100, tStep=100 *.25,queue=None):\n        print(f\"Initializing prep of file {k} with path {self.EEG_dict[k]['path']}.\")\n        annotations = solveLabelChannelRelation(self.EEG_dict[k]['csvpath'])\n\n        self.EEG_dict[k] = self.readRawEdf(self.EEG_dict[k], tWindow=tWindow, tStep=tStep,\n                                           read_raw_edf_param={'preload': True})\n\n        self.EEG_dict[k][\"rawData\"] = TUH_rename_ch(self.EEG_dict[k][\"rawData\"])\n        TUH_pick = ['Fp1', 'Fp2', 'F3', 'F4', 'C3', 'C4', 'P3', 'P4', 'O1', 'O2',\n                    'F7', 'F8', 'T3', 'T4', 'T5', 'T6', 'Cz']  # A1, A2 removed\n        self.EEG_dict[k][\"rawData\"].pick_channels(ch_names=TUH_pick)\n        self.EEG_dict[k][\"rawData\"].reorder_channels(TUH_pick)\n\n        simplePreprocess(self.EEG_dict[k][\"rawData\"], cap_setup=\"standard_1005\", lpfq=1, hpfq=100, notchfq=60,\n                         downSam=250)\n\n        # Generate output windows for (X,y) as (array, label)\n        self.EEG_dict[k][\"labeled_windows\"], self.index_patient_df[\"window_count\"][k],\\\n        self.index_patient_df[\"elec_count\"][k] = slidingRawWindow(self.EEG_dict[k],\n                                                                  t_max=self.EEG_dict[k][\"rawData\"].times[-1],\n                                                                  tStep=self.EEG_dict[k][\"tStep\"],\n                                                                  electrodeCLF=True, df=annotations)\n        filename=self.EEG_dict[k]['id']+self.EEG_dict[k]['patient_id']+ self.EEG_dict[k]['session'] +os.path.split(self.EEG_dict[k]['path'])[1][:-4]\n        save_dict=open(f\"pickles/EEG_dict{filename}.pkl\",\"wb\")\n        pickle.dump(self.EEG_dict[k],save_dict)\n        save_dict.close()\n        self.index_patient_df[self.index_patient_df['index']==k].to_pickle(f\"pickles/index_patient_df{filename}.pkl\")\n\n        print(f\"Finished prep of file {k}.\")    \n\n        return (self.EEG_dict[k],self.index_patient_df[\"window_count\"][k],self.index_patient_df[\"elec_count\"][k])\n\n\n    def parallelElectrodeCLFPrepVer3(self, tWindow=100, tStep=100 *.25):\n        tic = time.time()\n\n        tasks_to_do = multiprocessing.Queue()\n        results = multiprocessing.Queue()\n        processes=[]\n\n        for k in range(len(self.EEG_dict)):\n            tasks_to_do.put(k)\n\n        for w in range(multiprocessing.cpu_count()):\n            p=multiprocessing.Process(target=self.doParallelJob,args=(tasks_to_do,tWindow,tStep,results))\n            processes.append(p)\n            p.start()\n\n        for p in processes:\n            p.join()\n\n        k=0\n        while not results.empty():\n            result=results.get()\n            self.EEG_dict[k] = result[0]\n            self.index_patient_df[\"window_count\"][k] = result[1]\n            self.index_patient_df[\"elec_count\"][k] = result[2]\n            k+=1\n\n        toc = time.time()\n        print(\"\\n~~~~~~~~~~~~~~~~~~~~\\n\"\n              \"it took %imin:%is to run electrode classifier preprocess-pipeline for %i file(s)\\nwith window length [%.2fs] and t_step [%.2fs]\"\n              \"\\n~~~~~~~~~~~~~~~~~~~~\\n\" % (int((toc - tic) / 60), int((toc - tic) % 60), len(self.EEG_dict),\n                                            tWindow, tStep))\n\n    def doParallelJob(self,tasks_to_do,tWindow=100, tStep=100 *.25,results=None):\n        while True:\n            try:\n                k = tasks_to_do.get_nowait()\n\n\n            except queue.Empty:\n                break\n            else:\n                #Run preprocessing on this file:\n                result=self.parallelPrepVer3(k,tWindow,tStep)\n                #if no exception has been raised, add the result to results queue\n                print(f\"Task no. {k} is done.\")\n                results.put(result)\n                time.sleep(.5)\n        return True\n\n    def parallelPrepVer3(self,k,tWindow=100, tStep=100 *.25):\n\n        print(f\"Initializing prep of file {k}.\")\n        annotations = solveLabelChannelRelation(self.EEG_dict[k]['csvpath'])\n\n        self.EEG_dict[k] = self.readRawEdf(self.EEG_dict[k], tWindow=tWindow, tStep=tStep,\n                                           read_raw_edf_param={'preload': True})\n\n        self.EEG_dict[k][\"rawData\"] = TUH_rename_ch(self.EEG_dict[k][\"rawData\"])\n        TUH_pick = ['Fp1', 'Fp2', 'F3', 'F4', 'C3', 'C4', 'P3', 'P4', 'O1', 'O2',\n                    'F7', 'F8', 'T3', 'T4', 'T5', 'T6', 'Cz']  # A1, A2 removed\n        self.EEG_dict[k][\"rawData\"].pick_channels(ch_names=TUH_pick)\n        self.EEG_dict[k][\"rawData\"].reorder_channels(TUH_pick)\n\n        simplePreprocess(self.EEG_dict[k][\"rawData\"], cap_setup=\"standard_1005\", lpfq=1, hpfq=100, notchfq=60,\n                         downSam=250)\n\n        # Generate output windows for (X,y) as (array, label)\n        self.EEG_dict[k][\"labeled_windows\"], self.index_patient_df[\"window_count\"][k],\\\n        self.index_patient_df[\"elec_count\"][k] = slidingRawWindow(self.EEG_dict[k],\n                                                                  t_max=self.EEG_dict[k][\"rawData\"].times[-1],\n                                                                  tStep=self.EEG_dict[k][\"tStep\"],\n                                                                  electrodeCLF=True, df=annotations)\n        print(f\"Finished prep of file {k}.\")\n\n        return (self.EEG_dict[k],self.index_patient_df[\"window_count\"][k],self.index_patient_df[\"elec_count\"][k])\n\n    def collectWindows(self,id=None):\n        # Helper funtion to makeDatasetFromIds\n        # Collects all windows from one session into list\n        Xwindows = []\n        Ywindows = []\n        windowInfo = []\n        for window in self.EEG_dict[id][\"labeled_windows\"].values():\n            Xwindows=Xwindows+[window[0]]\n            if window[1] == ['elec']:\n                Ywindows.append([1])\n            else:\n                Ywindows.append([0])\n            #Ywindows.append(1 if window[1]==['elec'] else 0)\n            # save info about which raw file and start time and end time this window is.\n            windowInfo.append([{'patient_id':self.EEG_dict[id]['patient_id'], 't_start':window[2], 't_end':window[3]}])\n\n        return Xwindows,Ywindows,windowInfo\n\n\n    def makeDatasetFromIds(self,ids=None):\n        # Needs list of Ids/indexes in EEG_dict. Function electrodeCLFPrep should be called beforehand.\n        # Collects all windows of all given ids into one list of X (window data) and Y corresponding labels\n        Xwindows = []\n        Ywindows = []\n        windowInfo = []\n        for id in ids:\n            Xwind,Ywind,windowIn=self.collectWindows(id=id)\n            Xwindows.append(Xwind)\n            Ywindows.append(Ywind)\n            windowInfo.append(windowIn)\n\n        return Xwindows,Ywindows,windowInfo\n\n    def specMaker(self):\n        Xwindows=self.Xwindows\n        Freq = self.sfreq\n        tWindow=self.tWindow\n        tStep=self.tStep\n        overlap=(tWindow-tStep)/tWindow #The amount of the window that overlaps with the next window.\n\n        for k in range(len(Xwindows)):\n            spectrogramMake(Xwindows[k], Freq,FFToverlap=overlap,tWindow=tWindow, show_chan_num=1,chan_names=self.ch_names)\n\n# renames TUH channels to conventional 10-20 system\ndef TUH_rename_ch(MNE_raw=False):\n    # MNE_raw\n    # mne.channels.rename_channels(MNE_raw.info, {\"PHOTIC-REF\": \"PROTIC\"})\n    for i in MNE_raw.info[\"ch_names\"]:\n        reSTR = r\"(?<=EEG )(\\S*)(?=-REF)\"  # working reSTR = r\"(?<=EEG )(.*)(?=-REF)\"\n        reSTR2 = r\"(?<=EEG )(\\S*)(?=-LE)\"  # working reSTR = r\"(?<=EEG )(.*)(?=-LE)\"\n        reLowC = ['FP1', 'FP2', 'FZ', 'CZ', 'PZ']\n\n        if re.search(reSTR, i) and re.search(reSTR, i).group() in reLowC:\n            lowC = i[0:5]+i[5].lower()+i[6:]\n            mne.channels.rename_channels(MNE_raw.info, {i: re.findall(reSTR, lowC)[0]})\n        elif i == \"PHOTIC-REF\":\n            mne.channels.rename_channels(MNE_raw.info, {i: \"PHOTIC\"})\n        elif re.search(reSTR, i):\n            mne.channels.rename_channels(MNE_raw.info, {i: re.findall(reSTR, i)[0]})\n\n        elif re.search(reSTR2, i) and re.search(reSTR2, i).group() in reLowC:\n            lowC = i[0:5]+i[5].lower()+i[6:]\n            mne.channels.rename_channels(MNE_raw.info, {i: re.findall(reSTR2, lowC)[0]})\n        elif i == \"PHOTIC-LE\":\n            mne.channels.rename_channels(MNE_raw.info, {i: \"PHOTIC\"})\n        elif re.search(reSTR2, i):\n                mne.channels.rename_channels(MNE_raw.info, {i: re.findall(reSTR2, i)[0]})\n        elif re.search(\"PHOTIC\", i):\n            mne.channels.rename_channels(MNE_raw.info, {i: \"PHOTIC\"})\n        else:\n            print(\"No match for %s\" % i)\n            continue\n            # print(i)\n    print(MNE_raw.info[\"ch_names\"])\n    return MNE_raw\n\n\ndef makeArrayWindow(MNE_raw=None, t0=0, tWindow=120):\n    # take a raw signal and make a window given time specifications. Outputs an array, because of raw.get_data().\n    chWindows = MNE_raw.get_data(start=int(t0), stop=int(t0 + tWindow), reject_by_annotation=None, picks=['eeg'])\n    return chWindows\n\n\ndef slidingRawWindow(EEG_series=None, t_max=0, tStep=1,electrodeCLF=False, df=False):\n    #If electrodeCLF is set to true, the function outputs a window per channel\n    # with labels assigned only for this channel.\n\n    window_count = 0\n    elec_count = 0\n    # catch correct sample frequency and end sample\n    edf_fS = EEG_series[\"rawData\"].info[\"sfreq\"]\n    t_N = int(t_max * edf_fS)\n\n    # ensure window-overlaps progress in sample interger\n    if float(tStep * edf_fS) == float(int(tStep * edf_fS)):\n        t_overlap = int(tStep * edf_fS)\n    else:\n        t_overlap = int(tStep * edf_fS)\n        overlap_change = 100 - (t_overlap / edf_fS) * 100\n        print(\"\\n  tStep [%.3f], overlap does not equal an interger [%f] and have been rounded to %i\"\n              \"\\n  equaling to %.1f%% overlap or %.3fs time steps\\n\\n\"\n              % (tStep, tStep * edf_fS, t_overlap, overlap_change, t_overlap / edf_fS))\n\n    # initialize variables for segments\n    window_EEG = defaultdict(tuple)\n    window_width = int(EEG_series[\"tWindow\"] * edf_fS)\n\n    # segment all N-1 windows (by positive lookahead)\n    for i in range(0, t_N - window_width, t_overlap):\n        t_start = i / edf_fS\n        t_end = (i + window_width) / edf_fS\n        window_key = \"window_%.3fs_%.3fs\" % (t_start, t_end)\n        window_data = makeArrayWindow(EEG_series[\"rawData\"], t0=i, tWindow=window_width)  # , show_chan_num=0) #)\n        if electrodeCLF:\n            for i in range(len(window_data)):\n                chan=EEG_series['rawData'].info['ch_names'][i]\n                channel_label=label_TUH(dataFrame=df, window=[t_start, t_end],channel=chan)\n                if 'elec' in channel_label:\n                    elec_count += 1\n                    window_count += 1\n                else:\n                    window_count += 1\n                oneHotChan=(np.asarray(EEG_series['rawData'].info['ch_names'])==chan)*1\n                window_EEG[window_key+f\"{i}\"] = (np.concatenate((oneHotChan,window_data[i])), channel_label,t_start,t_end)\n        else:\n            window_label = label_TUH(dataFrame=df, window=[t_start, t_end],channel=None)  # , saveDir=annoDir)\n            window_EEG[window_key] = (window_data, window_label)\n    # window_N segments (by negative lookahead)\n    if t_N % t_overlap != 0:\n        t_start = (t_N - window_width) / edf_fS\n        t_end = t_N / edf_fS\n        window_key = \"window_%.3fs_%.3fs\" % (t_start, t_end)\n        window_data = makeArrayWindow(EEG_series[\"rawData\"], t0=i, tWindow=window_width)\n        if electrodeCLF:\n            for i in range(len(window_data)):\n                chan=EEG_series['rawData'].info['ch_names'][i]\n                channel_label=label_TUH(dataFrame=df, window=[t_start, t_end],channel=chan)\n                if 'elec' in channel_label:\n                    elec_count += 1\n                    window_count += 1\n                else:\n                    window_count += 1\n                oneHotChan=(np.asarray(EEG_series['rawData'].info['ch_names'])==chan)*1\n                window_EEG[window_key+f\"{i}\"] = (np.concatenate((oneHotChan,window_data[i])), channel_label,t_start,t_end)\n        else:\n            window_label = label_TUH(dataFrame=df, window=[t_start, t_end])  # , saveDir=annoDir)\n            window_EEG[window_key] = (window_data, window_label)\n    return window_EEG, window_count, elec_count\n\ndef plotWindow(EEG_series,label=\"null\", t_max=0, t_step=1):\n    edf_fS = EEG_series[\"rawData\"].info[\"sfreq\"]\n    t_N = int(t_max * edf_fS)\n    window_width = int(EEG_series[\"tWindow\"] * edf_fS)\n\n    for i in range(0, t_N - window_width, t_step):\n        t_start = i / edf_fS\n        t_end = (i + window_width) / edf_fS\n        window_label = label_TUH(dataFrame=df, window=[t_start, t_end])\n        if len(window_label)==1 & window_label[0]==label:\n            return EEG_series[\"rawData\"].plot(t_start=t_start, t_end=t_end)\n    return None\n\ndef spectrogramMake(MNE_window=None, freq = None, tWindow=100, crop_fq=45, FFToverlap=None, show_chan_num=None,chan_names=None):\n    try:\n        edfFs = freq\n        chWindows = MNE_window\n\n        if FFToverlap is None:\n            specOption = {\"x\": chWindows, \"fs\": edfFs, \"mode\": \"psd\"}\n        else:\n            window = signal.get_window(window=('tukey', 0.25), Nx=int(tWindow))  # TODO: error in 'Nx' & 'noverlap' proportions\n            specOption = {\"x\": chWindows, \"fs\": edfFs, \"window\": window, \"noverlap\": int(tWindow*FFToverlap), \"mode\": \"psd\"}\n\n        fAx, tAx, Sxx = signal.spectrogram(**specOption)\n        normSxx = stats.zscore(np.log(Sxx[:, fAx <= crop_fq, :] + 2**-52)) #np.finfo(float).eps))\n        if isinstance(show_chan_num, int):\n            plot_spec = plotSpec(ch_names=chan_names, chan=show_chan_num,\n                                 fAx=fAx[fAx <= crop_fq], tAx=tAx, Sxx=normSxx)\n            plot_spec.show()\n    except:\n        print(\"pause here\")\n        # fTemp, tTemp, SxxTemp = signal.spectrogram(chWindows[0], fs=edfFs)\n        # plt.pcolormesh(tTemp, fTemp, np.log(SxxTemp))\n        # plt.ylabel('Frequency [Hz]')\n        # plt.xlabel('Time [sec]')\n        # plt.title(\"channel spectrogram: \"+MNE_raw.ch_names[0])\n        # plt.ylim(0,45)\n        # plt.show()\n\n    return torch.tensor(normSxx.astype(np.float16)) # for np delete torch.tensor\n\ndef plotSpec(ch_names=False, chan=False, fAx=False, tAx=False, Sxx=False):\n    # fTemp, tTemp, SxxTemp = signal.spectrogram(chWindows[0], fs=edfFs)\n    # normSxx = stats.zscore(np.log(Sxx[:, fAx <= cropFq, :] + np.finfo(float).eps))\n    plt.pcolormesh(tAx, fAx, Sxx[chan, :, :])\n    plt.ylabel('Frequency [Hz]')\n    plt.xlabel('Time [sec]')\n    plt.title(\"channel spectrogram: \" + ch_names[chan])\n\n    return plt\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pipeline/loadFunctions.py b/pipeline/loadFunctions.py
--- a/pipeline/loadFunctions.py	(revision a91b867fd16ac0610cb4a4c8e484350235162d63)
+++ b/pipeline/loadFunctions.py	(date 1654847969164)
@@ -30,8 +30,8 @@
 
         title = title or "Gaussian Distribution"
         x_label = x_label or "x"
-        y_label = y_label or "N(x|mu,std)"
-        legend_label = legend_label or "μ={}, σ={}, type={}".format(mean, std, name)
+        y_label = y_label or "N(x|mu,sigma)"
+        legend_label = legend_label or "mu={}, sigma={}, type={}".format(mean, std, name)
 
         X = np.linspace(lower_bound, upper_bound, resolution)
         dist_X = Gaussian._distribution(X, mean, std)
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"681eb482-4823-466c-900b-a027fa28e27f\" name=\"Changes\" comment=\"Intermediate pickles\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/dEEpG.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/dEEpG.iml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Python Script\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Merge.Settings\">\n    <option name=\"BRANCH\" value=\"origin/main\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitSEFilterConfiguration\">\n    <file-type-list>\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\n      <filtered-out-file-type name=\"TAG\" />\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\n    </file-type-list>\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"25W0Gvvo5KunPrCnT8lbZPNy557\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/marie/PycharmProjects/FagprojektEEG/pipeline&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"C:\\Users\\marie\\PycharmProjects\\FagprojektEEG\\pipeline\" />\n      <recent name=\"C:\\Users\\marie\\PycharmProjects\\dEEpG\\David\" />\n      <recent name=\"C:\\Users\\marie\\PycharmProjects\\dEEpG\\Load\" />\n      <recent name=\"C:\\Users\\marie\\PycharmProjects\\dEEpG\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"C:\\Users\\marie\\PycharmProjects\\FagprojektEEG\" />\n      <recent name=\"$PROJECT_DIR$/scripts\" />\n      <recent name=\"C:\\Users\\marie\\PycharmProjects\\dEEpG\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Python.pipelineMain\">\n    <configuration name=\"clfs\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"dEEpG\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/pipeline\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/pipeline/clfs.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"pipelineMain\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"dEEpG\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/pipeline\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"C:\\Users\\marie\\PycharmProjects\\FagprojektEEG\\pipeline\\pipelineMain.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"pipelineMain\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"dEEpG\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"C:\\Users\\marie\\AppData\\Local\\Programs\\Python\\Python310\\python.exe\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/pipeline\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/pipeline/pipelineMain.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"pipeline_main\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"dEEpG\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/pipeline\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/pipeline/pipeline_main.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"plot_tuh_eeg_corpus\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"dEEpG\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/pipeline\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/pipeline/plot_tuh_eeg_corpus.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <list>\n      <item itemvalue=\"Python.pipelineMain\" />\n      <item itemvalue=\"Python.pipeline_main\" />\n      <item itemvalue=\"Python.plot_tuh_eeg_corpus\" />\n      <item itemvalue=\"Python.clfs\" />\n    </list>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Python.pipelineMain\" />\n        <item itemvalue=\"Python.clfs\" />\n        <item itemvalue=\"Python.pipeline_main\" />\n        <item itemvalue=\"Python.plot_tuh_eeg_corpus\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"681eb482-4823-466c-900b-a027fa28e27f\" name=\"Changes\" comment=\"\" />\n      <created>1645627443933</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1645627443933</updated>\n    </task>\n    <task id=\"LOCAL-00022\" summary=\"classify electrode intervals created\">\n      <created>1650467527269</created>\n      <option name=\"number\" value=\"00022\" />\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1650467527269</updated>\n    </task>\n    <task id=\"LOCAL-00023\" summary=\"Changes by marie\">\n      <created>1651070204417</created>\n      <option name=\"number\" value=\"00023\" />\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1651070204428</updated>\n    </task>\n    <task id=\"LOCAL-00024\" summary=\"label magi\">\n      <created>1651070227075</created>\n      <option name=\"number\" value=\"00024\" />\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1651070227075</updated>\n    </task>\n    <task id=\"LOCAL-00025\" summary=\"Changes by marie\">\n      <created>1651071331043</created>\n      <option name=\"number\" value=\"00025\" />\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1651071331044</updated>\n    </task>\n    <task id=\"LOCAL-00026\" summary=\"label magi updates\">\n      <created>1651071386111</created>\n      <option name=\"number\" value=\"00026\" />\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1651071386111</updated>\n    </task>\n    <task id=\"LOCAL-00027\" summary=\"shelves patches\">\n      <created>1651071397942</created>\n      <option name=\"number\" value=\"00027\" />\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1651071397942</updated>\n    </task>\n    <task id=\"LOCAL-00028\" summary=\"Changes by marie\">\n      <created>1651071407671</created>\n      <option name=\"number\" value=\"00028\" />\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1651071407671</updated>\n    </task>\n    <task id=\"LOCAL-00029\" summary=\"shelves patches\">\n      <created>1651517674886</created>\n      <option name=\"number\" value=\"00029\" />\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1651517674887</updated>\n    </task>\n    <task id=\"LOCAL-00030\" summary=\"Changes to solveLabelChannelRelation, splitting of double labels etc.\">\n      <created>1651651173991</created>\n      <option name=\"number\" value=\"00030\" />\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1651651173991</updated>\n    </task>\n    <task id=\"LOCAL-00031\" summary=\"split functions between loadFunction.py and new labelFunctions.py\">\n      <created>1651651491638</created>\n      <option name=\"number\" value=\"00031\" />\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1651651491638</updated>\n    </task>\n    <task id=\"LOCAL-00032\" summary=\"change structure to have raw and windows in EEG_dict and two functions for handling of this\">\n      <created>1651676545606</created>\n      <option name=\"number\" value=\"00032\" />\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1651676545606</updated>\n    </task>\n    <task id=\"LOCAL-00033\" summary=\"pandas df patient id index overview\">\n      <created>1651679080652</created>\n      <option name=\"number\" value=\"00033\" />\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1651679080652</updated>\n    </task>\n    <task id=\"LOCAL-00034\" summary=\"spring cleaning\">\n      <created>1654170241105</created>\n      <option name=\"number\" value=\"00034\" />\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654170241105</updated>\n    </task>\n    <task id=\"LOCAL-00035\" summary=\"spring cleaning 2.0\">\n      <created>1654170749780</created>\n      <option name=\"number\" value=\"00035\" />\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654170749780</updated>\n    </task>\n    <task id=\"LOCAL-00036\" summary=\"rename of Cv.py\">\n      <created>1654248246566</created>\n      <option name=\"number\" value=\"00036\" />\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654248246566</updated>\n    </task>\n    <task id=\"LOCAL-00037\" summary=\"custom splitDataset function added\">\n      <created>1654253923094</created>\n      <option name=\"number\" value=\"00037\" />\n      <option name=\"presentableId\" value=\"LOCAL-00037\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654253923095</updated>\n    </task>\n    <task id=\"LOCAL-00038\" summary=\"check for saved TUH instance added\">\n      <created>1654253946314</created>\n      <option name=\"number\" value=\"00038\" />\n      <option name=\"presentableId\" value=\"LOCAL-00038\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654253946314</updated>\n    </task>\n    <task id=\"LOCAL-00039\" summary=\"save class instance\">\n      <created>1654253962410</created>\n      <option name=\"number\" value=\"00039\" />\n      <option name=\"presentableId\" value=\"LOCAL-00039\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654253962410</updated>\n    </task>\n    <task id=\"LOCAL-00040\" summary=\".xml updates\">\n      <created>1654253981937</created>\n      <option name=\"number\" value=\"00040\" />\n      <option name=\"presentableId\" value=\"LOCAL-00040\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654253981937</updated>\n    </task>\n    <task id=\"LOCAL-00041\" summary=\"evaluation.py was created\">\n      <created>1654262724021</created>\n      <option name=\"number\" value=\"00041\" />\n      <option name=\"presentableId\" value=\"LOCAL-00041\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654262724022</updated>\n    </task>\n    <task id=\"LOCAL-00042\" summary=\"added data split by patient id to main\">\n      <created>1654265636036</created>\n      <option name=\"number\" value=\"00042\" />\n      <option name=\"presentableId\" value=\"LOCAL-00042\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654265636036</updated>\n    </task>\n    <task id=\"LOCAL-00043\" summary=\"bug fixes\">\n      <created>1654265646716</created>\n      <option name=\"number\" value=\"00043\" />\n      <option name=\"presentableId\" value=\"LOCAL-00043\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654265646716</updated>\n    </task>\n    <task id=\"LOCAL-00044\" summary=\"unversioned files\">\n      <created>1654265663487</created>\n      <option name=\"number\" value=\"00044\" />\n      <option name=\"presentableId\" value=\"LOCAL-00044\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654265663487</updated>\n    </task>\n    <task id=\"LOCAL-00045\" summary=\"Comments and small fix to annotation algorithm\">\n      <created>1654506329822</created>\n      <option name=\"number\" value=\"00045\" />\n      <option name=\"presentableId\" value=\"LOCAL-00045\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654506329822</updated>\n    </task>\n    <task id=\"LOCAL-00046\" summary=\"Comments and small fix to annotation algorithm\">\n      <created>1654506359782</created>\n      <option name=\"number\" value=\"00046\" />\n      <option name=\"presentableId\" value=\"LOCAL-00046\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654506359782</updated>\n    </task>\n    <task id=\"LOCAL-00047\" summary=\"requirements file made\">\n      <created>1654509313537</created>\n      <option name=\"number\" value=\"00047\" />\n      <option name=\"presentableId\" value=\"LOCAL-00047\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654509313537</updated>\n    </task>\n    <task id=\"LOCAL-00048\" summary=\"requirements file made\">\n      <created>1654510463961</created>\n      <option name=\"number\" value=\"00048\" />\n      <option name=\"presentableId\" value=\"LOCAL-00048\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654510463961</updated>\n    </task>\n    <task id=\"LOCAL-00049\" summary=\"extra data files\">\n      <created>1654510715716</created>\n      <option name=\"number\" value=\"00049\" />\n      <option name=\"presentableId\" value=\"LOCAL-00049\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654510715716</updated>\n    </task>\n    <task id=\"LOCAL-00050\" summary=\"Fix of solveLabelChannelRelation() to  work for both types of csv setups\">\n      <created>1654519520744</created>\n      <option name=\"number\" value=\"00050\" />\n      <option name=\"presentableId\" value=\"LOCAL-00050\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654519520744</updated>\n    </task>\n    <task id=\"LOCAL-00051\" summary=\"extra data files\">\n      <created>1654519705274</created>\n      <option name=\"number\" value=\"00051\" />\n      <option name=\"presentableId\" value=\"LOCAL-00051\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654519705274</updated>\n    </task>\n    <task id=\"LOCAL-00052\" summary=\"extra data files\">\n      <created>1654519726901</created>\n      <option name=\"number\" value=\"00052\" />\n      <option name=\"presentableId\" value=\"LOCAL-00052\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654519726901</updated>\n    </task>\n    <task id=\"LOCAL-00053\" summary=\"extra data files\">\n      <created>1654519771835</created>\n      <option name=\"number\" value=\"00053\" />\n      <option name=\"presentableId\" value=\"LOCAL-00053\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654519771835</updated>\n    </task>\n    <task id=\"LOCAL-00054\" summary=\"xml file change\">\n      <created>1654520793277</created>\n      <option name=\"number\" value=\"00054\" />\n      <option name=\"presentableId\" value=\"LOCAL-00054\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654520793277</updated>\n    </task>\n    <task id=\"LOCAL-00055\" summary=\"PipelineMain save pickles of EEG_dict and index_df\">\n      <created>1654524072373</created>\n      <option name=\"number\" value=\"00055\" />\n      <option name=\"presentableId\" value=\"LOCAL-00055\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654524072373</updated>\n    </task>\n    <task id=\"LOCAL-00056\" summary=\"Attempt to implement parallel programming on preprocessing of the files\">\n      <created>1654673040866</created>\n      <option name=\"number\" value=\"00056\" />\n      <option name=\"presentableId\" value=\"LOCAL-00056\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654673040866</updated>\n    </task>\n    <task id=\"LOCAL-00057\" summary=\"Extra files\">\n      <created>1654673259484</created>\n      <option name=\"number\" value=\"00057\" />\n      <option name=\"presentableId\" value=\"LOCAL-00057\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654673259484</updated>\n    </task>\n    <task id=\"LOCAL-00058\" summary=\"Extra files\">\n      <created>1654673281672</created>\n      <option name=\"number\" value=\"00058\" />\n      <option name=\"presentableId\" value=\"LOCAL-00058\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654673281672</updated>\n    </task>\n    <task id=\"LOCAL-00059\" summary=\"Extra files\">\n      <created>1654673318584</created>\n      <option name=\"number\" value=\"00059\" />\n      <option name=\"presentableId\" value=\"LOCAL-00059\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654673318584</updated>\n    </task>\n    <task id=\"LOCAL-00060\" summary=\"Working parallel programming of preprocess\">\n      <created>1654674718499</created>\n      <option name=\"number\" value=\"00060\" />\n      <option name=\"presentableId\" value=\"LOCAL-00060\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654674718499</updated>\n    </task>\n    <task id=\"LOCAL-00061\" summary=\"Fix bugs in plots, hereunder fixing the annotation_TUH function\">\n      <created>1654679620562</created>\n      <option name=\"number\" value=\"00061\" />\n      <option name=\"presentableId\" value=\"LOCAL-00061\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654679620562</updated>\n    </task>\n    <task id=\"LOCAL-00062\" summary=\"Creation of function for plotting statistics about the patients and sessions\">\n      <created>1654694052121</created>\n      <option name=\"number\" value=\"00062\" />\n      <option name=\"presentableId\" value=\"LOCAL-00062\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654694052121</updated>\n    </task>\n    <task id=\"LOCAL-00063\" summary=\"Removal of tqdm bars since they make a lot of mixed output on the HPC\">\n      <created>1654694102485</created>\n      <option name=\"number\" value=\"00063\" />\n      <option name=\"presentableId\" value=\"LOCAL-00063\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654694102485</updated>\n    </task>\n    <task id=\"LOCAL-00064\" summary=\"Trying to make multiprocessing work by queue. Still fails on the hpc after approx 150 files.\">\n      <created>1654694163384</created>\n      <option name=\"number\" value=\"00064\" />\n      <option name=\"presentableId\" value=\"LOCAL-00064\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654694163384</updated>\n    </task>\n    <task id=\"LOCAL-00065\" summary=\"StatFunction for mr Benjamin\">\n      <created>1654759728461</created>\n      <option name=\"number\" value=\"00065\" />\n      <option name=\"presentableId\" value=\"LOCAL-00065\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654759728461</updated>\n    </task>\n    <task id=\"LOCAL-00066\" summary=\"Upfate on label_TUH to only handle one channel per annotation rather than old way with channel pairs. This is now handled in solveLabelChannelRelation.\">\n      <created>1654760163836</created>\n      <option name=\"number\" value=\"00066\" />\n      <option name=\"presentableId\" value=\"LOCAL-00066\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654760163836</updated>\n    </task>\n    <task id=\"LOCAL-00067\" summary=\"Attempts at parallel programming\">\n      <created>1654760203333</created>\n      <option name=\"number\" value=\"00067\" />\n      <option name=\"presentableId\" value=\"LOCAL-00067\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654760203333</updated>\n    </task>\n    <task id=\"LOCAL-00068\" summary=\"Attempts at parallel programming\">\n      <created>1654760321558</created>\n      <option name=\"number\" value=\"00068\" />\n      <option name=\"presentableId\" value=\"LOCAL-00068\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654760321558</updated>\n    </task>\n    <task id=\"LOCAL-00069\" summary=\"Actual fix to label_TUH\">\n      <created>1654766880762</created>\n      <option name=\"number\" value=\"00069\" />\n      <option name=\"presentableId\" value=\"LOCAL-00069\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654766880762</updated>\n    </task>\n    <task id=\"LOCAL-00070\" summary=\"Intermediate pickles\">\n      <created>1654776221191</created>\n      <option name=\"number\" value=\"00070\" />\n      <option name=\"presentableId\" value=\"LOCAL-00070\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1654776221191</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"71\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n        <entry key=\"bc83aafe-54b4-44c4-943b-ca299a6a98fe\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"RECENT_FILTERS\">\n      <map>\n        <entry key=\"Branch\">\n          <value>\n            <list>\n              <RecentGroup>\n                <option name=\"FILTER_VALUES\">\n                  <option value=\"HEAD\" />\n                </option>\n              </RecentGroup>\n            </list>\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"check for saved TUH instance added\" />\n    <MESSAGE value=\"save class instance\" />\n    <MESSAGE value=\".xml updates\" />\n    <MESSAGE value=\"evaluation.py was created\" />\n    <MESSAGE value=\"added data split by patient id to main\" />\n    <MESSAGE value=\"bug fixes\" />\n    <MESSAGE value=\"unversioned files\" />\n    <MESSAGE value=\"Comments and small fix to annotation algorithm\" />\n    <MESSAGE value=\"requirements file made\" />\n    <MESSAGE value=\"Fix of solveLabelChannelRelation() to  work for both types of csv setups\" />\n    <MESSAGE value=\"extra data files\" />\n    <MESSAGE value=\"xml file change\" />\n    <MESSAGE value=\"PipelineMain save pickles of EEG_dict and index_df\" />\n    <MESSAGE value=\"Attempt to implement parallel programming on preprocessing of the files\" />\n    <MESSAGE value=\"Extra files\" />\n    <MESSAGE value=\"Working parallel programming of preprocess\" />\n    <MESSAGE value=\"Fix bugs in plots, hereunder fixing the annotation_TUH function\" />\n    <MESSAGE value=\"Creation of function for plotting statistics about the patients and sessions\" />\n    <MESSAGE value=\"Removal of tqdm bars since they make a lot of mixed output on the HPC\" />\n    <MESSAGE value=\"Trying to make multiprocessing work by queue. Still fails on the hpc after approx 150 files.\" />\n    <MESSAGE value=\"StatFunction for mr Benjamin\" />\n    <MESSAGE value=\"Upfate on label_TUH to only handle one channel per annotation rather than old way with channel pairs. This is now handled in solveLabelChannelRelation.\" />\n    <MESSAGE value=\"Attempts at parallel programming\" />\n    <MESSAGE value=\"Actual fix to label_TUH\" />\n    <MESSAGE value=\"Intermediate pickles\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Intermediate pickles\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/pipeline/raw_utils.py</url>\n          <line>118</line>\n          <option name=\"timeStamp\" value=\"139\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/pipeline/raw_utils.py</url>\n          <line>128</line>\n          <option name=\"timeStamp\" value=\"140\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/pipeline/raw_utils.py</url>\n          <line>120</line>\n          <option name=\"timeStamp\" value=\"141\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/pipeline/raw_utils.py</url>\n          <line>110</line>\n          <option name=\"timeStamp\" value=\"142\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/pipeline/raw_utils.py</url>\n          <line>108</line>\n          <option name=\"timeStamp\" value=\"143\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/pipeline/labelFunctions.py</url>\n          <line>173</line>\n          <option name=\"timeStamp\" value=\"165\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/pipeline/statFunctions.py</url>\n          <line>21</line>\n          <option name=\"timeStamp\" value=\"188\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/pipeline/statFunctions.py</url>\n          <line>12</line>\n          <option name=\"timeStamp\" value=\"189\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/pipeline/pipelineMain.py</url>\n          <line>52</line>\n          <option name=\"timeStamp\" value=\"193\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/pipeline/loadFunctions.py</url>\n          <line>261</line>\n          <option name=\"timeStamp\" value=\"197\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/pipeline/loadFunctions.py</url>\n          <line>393</line>\n          <option name=\"timeStamp\" value=\"200\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/pipeline/loadFunctions.py</url>\n          <line>311</line>\n          <option name=\"timeStamp\" value=\"211\" />\n        </line-breakpoint>\n      </breakpoints>\n      <default-breakpoints>\n        <breakpoint type=\"python-exception\">\n          <properties notifyOnTerminate=\"true\" exception=\"BaseException\">\n            <option name=\"notifyOnTerminate\" value=\"true\" />\n          </properties>\n        </breakpoint>\n      </default-breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision a91b867fd16ac0610cb4a4c8e484350235162d63)
+++ b/.idea/workspace.xml	(date 1654851173169)
@@ -4,10 +4,19 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="681eb482-4823-466c-900b-a027fa28e27f" name="Changes" comment="Intermediate pickles">
+    <list default="true" id="681eb482-4823-466c-900b-a027fa28e27f" name="Changes" comment="recommit that didnt go through. fixed 2 lvl group CV">
       <change beforePath="$PROJECT_DIR$/.idea/dEEpG.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dEEpG.iml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_03_06_2022,_15_25_[Changes]1/00013103_s001_t000.edf" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/TUH_data_sample/010/00001006/s001_2003_04_28/00001006_s001_t001.edf" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/TUH_data_sample/039/00003977/s001_2007_03_26/00003977_s001_t000.edf" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/TUH_data_sample/039/00003977/s001_2007_03_26/00003977_s001_t001.edf" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/TUH_data_sample/131/00013103/s001_2015_09_30/00013103_s001_t000.edf" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/pipeline/.finalized_model.sav.icloud" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/pipeline/clfs.py" beforeDir="false" afterPath="$PROJECT_DIR$/pipeline/clfs.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/pipeline/cvFunctions.py" beforeDir="false" afterPath="$PROJECT_DIR$/pipeline/cvFunctions.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/pipeline/loadFunctions.py" beforeDir="false" afterPath="$PROJECT_DIR$/pipeline/loadFunctions.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -46,25 +55,22 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/marie/PycharmProjects/FagprojektEEG/pipeline&quot;
-  }
-}</component>
+  <component name="PropertiesComponent">
+    <property name="exceleditor.install" value="true" />
+    <property name="settings.editor.selected.configurable" value="configurable.group.build" />
+  </component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
-      <recent name="C:\Users\marie\PycharmProjects\FagprojektEEG\pipeline" />
       <recent name="C:\Users\marie\PycharmProjects\dEEpG\David" />
       <recent name="C:\Users\marie\PycharmProjects\dEEpG\Load" />
       <recent name="C:\Users\marie\PycharmProjects\dEEpG" />
     </key>
     <key name="MoveFile.RECENT_KEYS">
-      <recent name="C:\Users\marie\PycharmProjects\FagprojektEEG" />
       <recent name="$PROJECT_DIR$/scripts" />
       <recent name="C:\Users\marie\PycharmProjects\dEEpG" />
     </key>
   </component>
-  <component name="RunManager" selected="Python.pipelineMain">
+  <component name="RunManager" selected="Python.clfs">
     <configuration name="clfs" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
       <module name="dEEpG" />
       <option name="INTERPRETER_OPTIONS" value="" />
@@ -86,7 +92,7 @@
       <option name="INPUT_FILE" value="" />
       <method v="2" />
     </configuration>
-    <configuration name="pipelineMain" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
+    <configuration name="labelFunctions" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
       <module name="dEEpG" />
       <option name="INTERPRETER_OPTIONS" value="" />
       <option name="PARENT_ENVS" value="true" />
@@ -98,7 +104,7 @@
       <option name="IS_MODULE_SDK" value="true" />
       <option name="ADD_CONTENT_ROOTS" value="true" />
       <option name="ADD_SOURCE_ROOTS" value="true" />
-      <option name="SCRIPT_NAME" value="C:\Users\marie\PycharmProjects\FagprojektEEG\pipeline\pipelineMain.py" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/pipeline/labelFunctions.py" />
       <option name="PARAMETERS" value="" />
       <option name="SHOW_COMMAND_LINE" value="false" />
       <option name="EMULATE_TERMINAL" value="false" />
@@ -174,14 +180,16 @@
       <item itemvalue="Python.pipelineMain" />
       <item itemvalue="Python.pipeline_main" />
       <item itemvalue="Python.plot_tuh_eeg_corpus" />
+      <item itemvalue="Python.labelFunctions" />
       <item itemvalue="Python.clfs" />
     </list>
     <recent_temporary>
       <list>
-        <item itemvalue="Python.pipelineMain" />
         <item itemvalue="Python.clfs" />
         <item itemvalue="Python.pipeline_main" />
         <item itemvalue="Python.plot_tuh_eeg_corpus" />
+        <item itemvalue="Python.pipelineMain" />
+        <item itemvalue="Python.labelFunctions" />
       </list>
     </recent_temporary>
   </component>
@@ -194,6 +202,132 @@
       <option name="presentableId" value="Default" />
       <updated>1645627443933</updated>
     </task>
+    <task id="LOCAL-00004" summary="loadData script and preprocessing from david Nyrnberg. Script to use functions called prepareData">
+      <created>1647437877128</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1647437877128</updated>
+    </task>
+    <task id="LOCAL-00005" summary="loadData script and preprocessing from david Nyrnberg. Script to use functions called prepareData">
+      <created>1647438156890</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1647438156890</updated>
+    </task>
+    <task id="LOCAL-00006" summary="loadData script and preprocessing from david Nyrnberg. Script to use functions called prepareData">
+      <created>1647438377335</created>
+      <option name="number" value="00006" />
+      <option name="presentableId" value="LOCAL-00006" />
+      <option name="project" value="LOCAL" />
+      <updated>1647438377335</updated>
+    </task>
+    <task id="LOCAL-00007" summary="Two temple data samples">
+      <created>1647439137416</created>
+      <option name="number" value="00007" />
+      <option name="presentableId" value="LOCAL-00007" />
+      <option name="project" value="LOCAL" />
+      <updated>1647439137416</updated>
+    </task>
+    <task id="LOCAL-00008" summary="David EEG loader and prep implement">
+      <created>1648046740264</created>
+      <option name="number" value="00008" />
+      <option name="presentableId" value="LOCAL-00008" />
+      <option name="project" value="LOCAL" />
+      <updated>1648046740264</updated>
+    </task>
+    <task id="LOCAL-00009" summary="David EEG loader and prep implement">
+      <created>1648046786090</created>
+      <option name="number" value="00009" />
+      <option name="presentableId" value="LOCAL-00009" />
+      <option name="project" value="LOCAL" />
+      <updated>1648046786090</updated>
+    </task>
+    <task id="LOCAL-00010" summary="Changing Davids preprocess code to make X and y arrays">
+      <created>1648644139919</created>
+      <option name="number" value="00010" />
+      <option name="presentableId" value="LOCAL-00010" />
+      <option name="project" value="LOCAL" />
+      <updated>1648644139919</updated>
+    </task>
+    <task id="LOCAL-00011" summary="Changing Davids preprocess code to make X and y arrays">
+      <created>1648644460238</created>
+      <option name="number" value="00011" />
+      <option name="presentableId" value="LOCAL-00011" />
+      <option name="project" value="LOCAL" />
+      <updated>1648644460238</updated>
+    </task>
+    <task id="LOCAL-00012" summary="Label_TUH fixed">
+      <created>1648645553495</created>
+      <option name="number" value="00012" />
+      <option name="presentableId" value="LOCAL-00012" />
+      <option name="project" value="LOCAL" />
+      <updated>1648645553495</updated>
+    </task>
+    <task id="LOCAL-00013" summary="Dataset of windows with labels">
+      <created>1648648022245</created>
+      <option name="number" value="00013" />
+      <option name="presentableId" value="LOCAL-00013" />
+      <option name="project" value="LOCAL" />
+      <updated>1648648022245</updated>
+    </task>
+    <task id="LOCAL-00014" summary="Code to load dataset as windows with labels">
+      <created>1648727132055</created>
+      <option name="number" value="00014" />
+      <option name="presentableId" value="LOCAL-00014" />
+      <option name="project" value="LOCAL" />
+      <updated>1648727132056</updated>
+    </task>
+    <task id="LOCAL-00015" summary="Preprocess modified">
+      <created>1649241087409</created>
+      <option name="number" value="00015" />
+      <option name="presentableId" value="LOCAL-00015" />
+      <option name="project" value="LOCAL" />
+      <updated>1649241087410</updated>
+    </task>
+    <task id="LOCAL-00016" summary="Preprocess modified">
+      <created>1649246342681</created>
+      <option name="number" value="00016" />
+      <option name="presentableId" value="LOCAL-00016" />
+      <option name="project" value="LOCAL" />
+      <updated>1649246342681</updated>
+    </task>
+    <task id="LOCAL-00017" summary="Spectrogram maker works">
+      <created>1649248703473</created>
+      <option name="number" value="00017" />
+      <option name="presentableId" value="LOCAL-00017" />
+      <option name="project" value="LOCAL" />
+      <updated>1649248703473</updated>
+    </task>
+    <task id="LOCAL-00018" summary="montageTest">
+      <created>1650014226240</created>
+      <option name="number" value="00018" />
+      <option name="presentableId" value="LOCAL-00018" />
+      <option name="project" value="LOCAL" />
+      <updated>1650014226240</updated>
+    </task>
+    <task id="LOCAL-00019" summary="electrode prep, sliding window changed">
+      <created>1650460611799</created>
+      <option name="number" value="00019" />
+      <option name="presentableId" value="LOCAL-00019" />
+      <option name="project" value="LOCAL" />
+      <updated>1650460611799</updated>
+    </task>
+    <task id="LOCAL-00020" summary="classify electrode intervals created">
+      <created>1650466865406</created>
+      <option name="number" value="00020" />
+      <option name="presentableId" value="LOCAL-00020" />
+      <option name="project" value="LOCAL" />
+      <updated>1650466865406</updated>
+    </task>
+    <task id="LOCAL-00021" summary="classify electrode intervals created">
+      <created>1650467513148</created>
+      <option name="number" value="00021" />
+      <option name="presentableId" value="LOCAL-00021" />
+      <option name="project" value="LOCAL" />
+      <updated>1650467513148</updated>
+    </task>
     <task id="LOCAL-00022" summary="classify electrode intervals created">
       <created>1650467527269</created>
       <option name="number" value="00022" />
@@ -355,189 +489,63 @@
       <option name="project" value="LOCAL" />
       <updated>1654265663487</updated>
     </task>
-    <task id="LOCAL-00045" summary="Comments and small fix to annotation algorithm">
-      <created>1654506329822</created>
+    <task id="LOCAL-00045" summary="counter update for windows and elec + measurres for classification">
+      <created>1654523993861</created>
       <option name="number" value="00045" />
       <option name="presentableId" value="LOCAL-00045" />
       <option name="project" value="LOCAL" />
-      <updated>1654506329822</updated>
+      <updated>1654523993868</updated>
     </task>
-    <task id="LOCAL-00046" summary="Comments and small fix to annotation algorithm">
-      <created>1654506359782</created>
+    <task id="LOCAL-00046" summary="plot for count fo windows and elec">
+      <created>1654600426775</created>
       <option name="number" value="00046" />
       <option name="presentableId" value="LOCAL-00046" />
       <option name="project" value="LOCAL" />
-      <updated>1654506359782</updated>
+      <updated>1654600426777</updated>
     </task>
-    <task id="LOCAL-00047" summary="requirements file made">
-      <created>1654509313537</created>
+    <task id="LOCAL-00047" summary="update new CV-functions with new accuracy meassures">
+      <created>1654674735462</created>
       <option name="number" value="00047" />
       <option name="presentableId" value="LOCAL-00047" />
       <option name="project" value="LOCAL" />
-      <updated>1654509313537</updated>
+      <updated>1654674735463</updated>
     </task>
-    <task id="LOCAL-00048" summary="requirements file made">
-      <created>1654510463961</created>
+    <task id="LOCAL-00048" summary="Gaussian distribution of elec and window count">
+      <created>1654679605407</created>
       <option name="number" value="00048" />
       <option name="presentableId" value="LOCAL-00048" />
       <option name="project" value="LOCAL" />
-      <updated>1654510463961</updated>
+      <updated>1654679605408</updated>
     </task>
-    <task id="LOCAL-00049" summary="extra data files">
-      <created>1654510715716</created>
+    <task id="LOCAL-00049" summary="New plots for Gaussian distribution of elec and window count + histogram plot">
+      <created>1654684444934</created>
       <option name="number" value="00049" />
       <option name="presentableId" value="LOCAL-00049" />
       <option name="project" value="LOCAL" />
-      <updated>1654510715716</updated>
+      <updated>1654684444934</updated>
     </task>
-    <task id="LOCAL-00050" summary="Fix of solveLabelChannelRelation() to  work for both types of csv setups">
-      <created>1654519520744</created>
+    <task id="LOCAL-00050" summary="New plots for Gaussian distribution of elec and window count + histogram plot (nu gemmes plottene)">
+      <created>1654687320428</created>
       <option name="number" value="00050" />
       <option name="presentableId" value="LOCAL-00050" />
       <option name="project" value="LOCAL" />
-      <updated>1654519520744</updated>
+      <updated>1654687320436</updated>
     </task>
-    <task id="LOCAL-00051" summary="extra data files">
-      <created>1654519705274</created>
+    <task id="LOCAL-00051" summary="fixed non-ascii character in plot title">
+      <created>1654771921704</created>
       <option name="number" value="00051" />
       <option name="presentableId" value="LOCAL-00051" />
       <option name="project" value="LOCAL" />
-      <updated>1654519705274</updated>
+      <updated>1654771921704</updated>
     </task>
-    <task id="LOCAL-00052" summary="extra data files">
-      <created>1654519726901</created>
+    <task id="LOCAL-00052" summary="recommit that didnt go through. fixed 2 lvl group CV">
+      <created>1654849086668</created>
       <option name="number" value="00052" />
       <option name="presentableId" value="LOCAL-00052" />
       <option name="project" value="LOCAL" />
-      <updated>1654519726901</updated>
-    </task>
-    <task id="LOCAL-00053" summary="extra data files">
-      <created>1654519771835</created>
-      <option name="number" value="00053" />
-      <option name="presentableId" value="LOCAL-00053" />
-      <option name="project" value="LOCAL" />
-      <updated>1654519771835</updated>
-    </task>
-    <task id="LOCAL-00054" summary="xml file change">
-      <created>1654520793277</created>
-      <option name="number" value="00054" />
-      <option name="presentableId" value="LOCAL-00054" />
-      <option name="project" value="LOCAL" />
-      <updated>1654520793277</updated>
-    </task>
-    <task id="LOCAL-00055" summary="PipelineMain save pickles of EEG_dict and index_df">
-      <created>1654524072373</created>
-      <option name="number" value="00055" />
-      <option name="presentableId" value="LOCAL-00055" />
-      <option name="project" value="LOCAL" />
-      <updated>1654524072373</updated>
-    </task>
-    <task id="LOCAL-00056" summary="Attempt to implement parallel programming on preprocessing of the files">
-      <created>1654673040866</created>
-      <option name="number" value="00056" />
-      <option name="presentableId" value="LOCAL-00056" />
-      <option name="project" value="LOCAL" />
-      <updated>1654673040866</updated>
-    </task>
-    <task id="LOCAL-00057" summary="Extra files">
-      <created>1654673259484</created>
-      <option name="number" value="00057" />
-      <option name="presentableId" value="LOCAL-00057" />
-      <option name="project" value="LOCAL" />
-      <updated>1654673259484</updated>
-    </task>
-    <task id="LOCAL-00058" summary="Extra files">
-      <created>1654673281672</created>
-      <option name="number" value="00058" />
-      <option name="presentableId" value="LOCAL-00058" />
-      <option name="project" value="LOCAL" />
-      <updated>1654673281672</updated>
-    </task>
-    <task id="LOCAL-00059" summary="Extra files">
-      <created>1654673318584</created>
-      <option name="number" value="00059" />
-      <option name="presentableId" value="LOCAL-00059" />
-      <option name="project" value="LOCAL" />
-      <updated>1654673318584</updated>
-    </task>
-    <task id="LOCAL-00060" summary="Working parallel programming of preprocess">
-      <created>1654674718499</created>
-      <option name="number" value="00060" />
-      <option name="presentableId" value="LOCAL-00060" />
-      <option name="project" value="LOCAL" />
-      <updated>1654674718499</updated>
-    </task>
-    <task id="LOCAL-00061" summary="Fix bugs in plots, hereunder fixing the annotation_TUH function">
-      <created>1654679620562</created>
-      <option name="number" value="00061" />
-      <option name="presentableId" value="LOCAL-00061" />
-      <option name="project" value="LOCAL" />
-      <updated>1654679620562</updated>
-    </task>
-    <task id="LOCAL-00062" summary="Creation of function for plotting statistics about the patients and sessions">
-      <created>1654694052121</created>
-      <option name="number" value="00062" />
-      <option name="presentableId" value="LOCAL-00062" />
-      <option name="project" value="LOCAL" />
-      <updated>1654694052121</updated>
-    </task>
-    <task id="LOCAL-00063" summary="Removal of tqdm bars since they make a lot of mixed output on the HPC">
-      <created>1654694102485</created>
-      <option name="number" value="00063" />
-      <option name="presentableId" value="LOCAL-00063" />
-      <option name="project" value="LOCAL" />
-      <updated>1654694102485</updated>
-    </task>
-    <task id="LOCAL-00064" summary="Trying to make multiprocessing work by queue. Still fails on the hpc after approx 150 files.">
-      <created>1654694163384</created>
-      <option name="number" value="00064" />
-      <option name="presentableId" value="LOCAL-00064" />
-      <option name="project" value="LOCAL" />
-      <updated>1654694163384</updated>
-    </task>
-    <task id="LOCAL-00065" summary="StatFunction for mr Benjamin">
-      <created>1654759728461</created>
-      <option name="number" value="00065" />
-      <option name="presentableId" value="LOCAL-00065" />
-      <option name="project" value="LOCAL" />
-      <updated>1654759728461</updated>
-    </task>
-    <task id="LOCAL-00066" summary="Upfate on label_TUH to only handle one channel per annotation rather than old way with channel pairs. This is now handled in solveLabelChannelRelation.">
-      <created>1654760163836</created>
-      <option name="number" value="00066" />
-      <option name="presentableId" value="LOCAL-00066" />
-      <option name="project" value="LOCAL" />
-      <updated>1654760163836</updated>
-    </task>
-    <task id="LOCAL-00067" summary="Attempts at parallel programming">
-      <created>1654760203333</created>
-      <option name="number" value="00067" />
-      <option name="presentableId" value="LOCAL-00067" />
-      <option name="project" value="LOCAL" />
-      <updated>1654760203333</updated>
+      <updated>1654849086668</updated>
     </task>
-    <task id="LOCAL-00068" summary="Attempts at parallel programming">
-      <created>1654760321558</created>
-      <option name="number" value="00068" />
-      <option name="presentableId" value="LOCAL-00068" />
-      <option name="project" value="LOCAL" />
-      <updated>1654760321558</updated>
-    </task>
-    <task id="LOCAL-00069" summary="Actual fix to label_TUH">
-      <created>1654766880762</created>
-      <option name="number" value="00069" />
-      <option name="presentableId" value="LOCAL-00069" />
-      <option name="project" value="LOCAL" />
-      <updated>1654766880762</updated>
-    </task>
-    <task id="LOCAL-00070" summary="Intermediate pickles">
-      <created>1654776221191</created>
-      <option name="number" value="00070" />
-      <option name="presentableId" value="LOCAL-00070" />
-      <option name="project" value="LOCAL" />
-      <updated>1654776221191</updated>
-    </task>
-    <option name="localTasksCounter" value="71" />
+    <option name="localTasksCounter" value="53" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -572,6 +580,16 @@
     </option>
   </component>
   <component name="VcsManagerConfiguration">
+    <MESSAGE value="Changes by marie" />
+    <MESSAGE value="shelves patches" />
+    <MESSAGE value="Changes to solveLabelChannelRelation, splitting of double labels etc." />
+    <MESSAGE value="split functions between loadFunction.py and new labelFunctions.py" />
+    <MESSAGE value="change structure to have raw and windows in EEG_dict and two functions for handling of this" />
+    <MESSAGE value="pandas df patient id index overview" />
+    <MESSAGE value="spring cleaning" />
+    <MESSAGE value="spring cleaning 2.0" />
+    <MESSAGE value="rename of Cv.py" />
+    <MESSAGE value="custom splitDataset function added" />
     <MESSAGE value="check for saved TUH instance added" />
     <MESSAGE value="save class instance" />
     <MESSAGE value=".xml updates" />
@@ -579,30 +597,35 @@
     <MESSAGE value="added data split by patient id to main" />
     <MESSAGE value="bug fixes" />
     <MESSAGE value="unversioned files" />
-    <MESSAGE value="Comments and small fix to annotation algorithm" />
-    <MESSAGE value="requirements file made" />
-    <MESSAGE value="Fix of solveLabelChannelRelation() to  work for both types of csv setups" />
-    <MESSAGE value="extra data files" />
-    <MESSAGE value="xml file change" />
-    <MESSAGE value="PipelineMain save pickles of EEG_dict and index_df" />
-    <MESSAGE value="Attempt to implement parallel programming on preprocessing of the files" />
-    <MESSAGE value="Extra files" />
-    <MESSAGE value="Working parallel programming of preprocess" />
-    <MESSAGE value="Fix bugs in plots, hereunder fixing the annotation_TUH function" />
-    <MESSAGE value="Creation of function for plotting statistics about the patients and sessions" />
-    <MESSAGE value="Removal of tqdm bars since they make a lot of mixed output on the HPC" />
-    <MESSAGE value="Trying to make multiprocessing work by queue. Still fails on the hpc after approx 150 files." />
-    <MESSAGE value="StatFunction for mr Benjamin" />
-    <MESSAGE value="Upfate on label_TUH to only handle one channel per annotation rather than old way with channel pairs. This is now handled in solveLabelChannelRelation." />
-    <MESSAGE value="Attempts at parallel programming" />
-    <MESSAGE value="Actual fix to label_TUH" />
-    <MESSAGE value="Intermediate pickles" />
-    <option name="LAST_COMMIT_MESSAGE" value="Intermediate pickles" />
+    <MESSAGE value="counter update for windows and elec + measurres for classification" />
+    <MESSAGE value="plot for count fo windows and elec" />
+    <MESSAGE value="update new CV-functions with new accuracy meassures" />
+    <MESSAGE value="Gaussian distribution of elec and window count" />
+    <MESSAGE value="New plots for Gaussian distribution of elec and window count + histogram plot" />
+    <MESSAGE value="New plots for Gaussian distribution of elec and window count + histogram plot (nu gemmes plottene)" />
+    <MESSAGE value="fixed non-ascii character in plot title" />
+    <MESSAGE value="recommit that didnt go through. fixed 2 lvl group CV" />
+    <option name="LAST_COMMIT_MESSAGE" value="recommit that didnt go through. fixed 2 lvl group CV" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
       <breakpoints>
         <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
+          <url>file://$PROJECT_DIR$/pipeline/pipelineMain.py</url>
+          <line>73</line>
+          <option name="timeStamp" value="71" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
+          <url>file://$PROJECT_DIR$/pipeline/pipelineMain.py</url>
+          <line>67</line>
+          <option name="timeStamp" value="72" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
+          <url>file://$PROJECT_DIR$/pipeline/pipelineMain.py</url>
+          <line>55</line>
+          <option name="timeStamp" value="138" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
           <url>file://$PROJECT_DIR$/pipeline/raw_utils.py</url>
           <line>118</line>
           <option name="timeStamp" value="139" />
@@ -628,39 +651,19 @@
           <option name="timeStamp" value="143" />
         </line-breakpoint>
         <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
-          <url>file://$PROJECT_DIR$/pipeline/labelFunctions.py</url>
-          <line>173</line>
-          <option name="timeStamp" value="165" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
-          <url>file://$PROJECT_DIR$/pipeline/statFunctions.py</url>
-          <line>21</line>
-          <option name="timeStamp" value="188" />
+          <url>file://$PROJECT_DIR$/pipeline/cvFunctions.py</url>
+          <line>490</line>
+          <option name="timeStamp" value="144" />
         </line-breakpoint>
         <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
-          <url>file://$PROJECT_DIR$/pipeline/statFunctions.py</url>
-          <line>12</line>
-          <option name="timeStamp" value="189" />
+          <url>file://$PROJECT_DIR$/pipeline/cvFunctions.py</url>
+          <line>492</line>
+          <option name="timeStamp" value="145" />
         </line-breakpoint>
         <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
-          <url>file://$PROJECT_DIR$/pipeline/pipelineMain.py</url>
-          <line>52</line>
-          <option name="timeStamp" value="193" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
-          <url>file://$PROJECT_DIR$/pipeline/loadFunctions.py</url>
-          <line>261</line>
-          <option name="timeStamp" value="197" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
-          <url>file://$PROJECT_DIR$/pipeline/loadFunctions.py</url>
-          <line>393</line>
-          <option name="timeStamp" value="200" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
-          <url>file://$PROJECT_DIR$/pipeline/loadFunctions.py</url>
-          <line>311</line>
-          <option name="timeStamp" value="211" />
+          <url>file://$PROJECT_DIR$/pipeline/cvFunctions.py</url>
+          <line>493</line>
+          <option name="timeStamp" value="146" />
         </line-breakpoint>
       </breakpoints>
       <default-breakpoints>
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.9 (FagprojektEEG)\" project-jdk-type=\"Python SDK\" />\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision a91b867fd16ac0610cb4a4c8e484350235162d63)
+++ b/.idea/misc.xml	(date 1654847992926)
@@ -1,4 +1,4 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.9 (FagprojektEEG)" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.8 (2)" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
Index: .idea/dEEpG.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"PYTHON_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\">\n    <content url=\"file://$MODULE_DIR$\">\n      <excludeFolder url=\"file://$MODULE_DIR$/venv\" />\n    </content>\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dEEpG.iml b/.idea/dEEpG.iml
--- a/.idea/dEEpG.iml	(revision a91b867fd16ac0610cb4a4c8e484350235162d63)
+++ b/.idea/dEEpG.iml	(date 1654847994568)
@@ -4,7 +4,7 @@
     <content url="file://$MODULE_DIR$">
       <excludeFolder url="file://$MODULE_DIR$/venv" />
     </content>
-    <orderEntry type="inheritedJdk" />
+    <orderEntry type="jdk" jdkName="Python 3.8 (2)" jdkType="Python SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
 </module>
\ No newline at end of file
